name: Infrastructure CI pipeline
on: 
  push:
    paths:
      - "infra/**"
    branches:
      - "**"
  pull_request:
    branches: 
      - "main"

jobs: 
  CI:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
     
    steps:
      - name: checkout repo 
        uses: actions/checkout@v3
      
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2
      
      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: terraform init
        run: | 
          terraform init 

      - name: terraform validate 
        run: | 
          terraform validate 
      
      - name: terraform fmt
        run: | 
          terraform fmt 
      
      - name: terraform plan
        run: | 
          terraform plan
      
      - name: echo github 
        run: | 
          echo '${{ toJson(github) }}'
      
      - name: echo results 
        run: | 
          echo "${{ github.event_name }}"
          echo "${{ github.event.pull_request }}"
          echo "${{ github.event.pull_request.base.ref }}"
          echo "${{ github.event.pull_request.merged}}"
    
  CD:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
    defaults:
      run: 
        working-directory: ./infra
      
    steps:
      - name: checkout repo 
        uses: actions/checkout@v3
      
      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.2
      
      - name: Configure AWS Credentials 
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      
      - name: Terraform apply 
        run: | 
          terraform apply -auto-approve
        